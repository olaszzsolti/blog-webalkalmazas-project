version: "3.9"

services:

  nginx-lsb:
    container_name: nginx-lsb
    image: nginx:latest
#    ports: 
#     - '8000:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      myblog:
        ipv4_address: 172.99.101.100
    depends_on:
      - apache-php
        

  database:
    image: mariadb:10.6.4
    environment:
      MARIADB_ROOT_PASSWORD: Pingvinharcos07
      MARIADB_DATABASE: test1
    volumes:
      - type: bind
        source: ./backup.sql
        target: /docker-entrypoint-initdb.d/backup.sql
      - type: volume
        source: myblog_database
        target: /var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
    networks:
      myblog:
        ipv4_address: 172.99.101.2
  
  
  apache-php:
    #        container_name: apache-php
    build:
      context: ../
      dockerfile: infrastructure/apache/Dockerfile
    deploy:
      mode: replicated
      replicas: 3
    links:
      - database
    networks:
      - myblog
    #        ports:
    #            - "80"
    #            - 443:443
    volumes:
      - type: volume
        source: shared_image
        target: /var/www/html/image
        volume:
          nocopy: true
      - ./php.ini:/usr/local/etc/php/conf.d/custom-php.ini
    #            - type: bind
    #              source: ./../web/
    #              target: /var/www/html
    #            - type: bind
    #              source: ./apache/password_manager.conf
    #              target: /etc/apache2/sites-enabled/password_manager.conf
    depends_on:
      database:
          condition: service_healthy
      nfs_server:
          condition: service_started

  redis:
    image: redis:4-alpine
    environment:
      #- REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PASSWORD=YOUR_REDIS_PASSWORD
    command: redis-server --appendonly yes
    volumes:
      - ./redis:/data
    networks:
      myblog: 
        ipv4_address: 172.99.101.20     

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - '7070:80'
    restart: always
    environment:
      PMA_HOST: database
    depends_on:
      - database
    networks:
      - myblog

  # https://hub.docker.com/r/itsthenetwork/nfs-server-alpine
  nfs_server:
    image: itsthenetwork/nfs-server-alpine:12
    #        image: php:7.4-apache
    #        image: erichough/nfs-server:1.2.0
    #        image: erichough/nfs-server
    container_name: nfs_server
    #        restart: unless-stopped
    privileged: true
    environment:
      - NFS_LOG_LEVEL=DEBUG
      - SYNC="true"
      - SHARED_DIRECTORY="/nfsshare"
      - GANESHA_EXPORT="/nfsshare"
    #            - GANESHA_LOGLEVEL="DEBUG"
    #            - GANESHA_CLIENT_LIST="*"
    volumes:
      - ./nfs-storage:/nfsshare
    healthcheck:
      test: ["CMD-SHELL", "if [ \"2\" = `rpcinfo  |grep local | wc -l` ] ;then true;else false;fi"]
      interval: 0.5s
      timeout: 1s
      # start_period: 900s
      retries: 10
    networks:
      myblog:
        ipv4_address: 172.99.101.7


volumes:
  shared_image:
    driver: local
    driver_opts:
      type: "nfs"
      o: "nfsvers=4.2,addr=172.99.101.7,rw,noacl,soft,timeo=6,sync,retrans=2,nosuid"
      #            o: "addr=172.99.101.7,soft,rw,nfsvers=4.2"
      device: ":/"
  myblog_database:


networks:
  myblog:
    driver: bridge
    ipam:
      config:
        - subnet: 172.99.101.0/24
          gateway: 172.99.101.1
